# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-28 17:53
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('observed_properties', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sensor__feature_metadata',
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('info', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sensor__network_metadata',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('info', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('sensor_network', models.ForeignKey(db_column='sensor_network', on_delete=django.db.models.deletion.DO_NOTHING, to='apiary.Network')),
            ],
            options={
                'db_table': 'sensor__node_metadata',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('observed_properties', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('info', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sensor__sensor_metadata',
            },
        ),
        migrations.CreateModel(
            name='SensorFeatureToNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.ForeignKey(db_column='feature', on_delete=django.db.models.deletion.DO_NOTHING, to='apiary.Feature')),
                ('network', models.ForeignKey(db_column='network', on_delete=django.db.models.deletion.DO_NOTHING, to='apiary.Network')),
            ],
            options={
                'db_table': 'sensor__feature_to_network',
            },
        ),
        migrations.CreateModel(
            name='SensorSensorToNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node', models.CharField(max_length=255)),
                ('network', models.ForeignKey(db_column='network', on_delete=django.db.models.deletion.DO_NOTHING, to='apiary.Node')),
                ('sensor', models.ForeignKey(db_column='sensor', on_delete=django.db.models.deletion.DO_NOTHING, to='apiary.Sensor')),
            ],
            options={
                'db_table': 'sensor__sensor_to_node',
            },
        ),
        migrations.AlterUniqueTogether(
            name='node',
            unique_together=set([('id', 'sensor_network')]),
        ),
    ]
